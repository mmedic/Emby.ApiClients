name: .NET Core
on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Project name to pack and publish
  PROJECT_NAME: EmbyClient.Dotnet
  PROJECT_DIR: ./Clients/Net.RestSharp
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/mmedic/index.json
  GITHUB_USER: mmedic
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'  

      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
        
      - name: Ensure GitHub NuGet Source
        run: |
          dotnet nuget add source $GITHUB_FEED \
            -n github \
            -u $GITHUB_USER \
            -p ${{ secrets.NUGET_REPO_PASSWORD }} \
            --store-password-in-clear-text

      - name: Set version variables
        run: |
          VER=$(cat ./Clients/Version.txt)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Show version
        run: |
          echo "VERSION: ${{ env.VERSION }}"
      
      - name: Restore
        run: dotnet restore "${{ env.PROJECT_DIR }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"

      - name: Build
        run: dotnet build -c Release --no-restore "${{ env.PROJECT_DIR }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"
     
      - name: Pack
        run: dotnet pack -v normal -c Release --no-restore --output nuget-packages --include-symbols --include-source -p:PackageVersion="${{ env.VERSION }}" "${{ env.PROJECT_DIR }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"

      - name: Push to GitHub Feed
        run: |
          pwd
          ls -l ./nuget-packages
          dotnet nuget push ./nuget-packages/*.nupkg --api-key ${GITHUB_TOKEN} --source ${GITHUB_FEED} --skip-duplicate

      - name: Cleanup
        if: always()
        continue-on-error: true
        run: |
          dotnet nuget remove source github

          
  
